name: Run Playwright tests

on:
  schedule:
    # 8:00 AM IST => 2:30 AM UTC for main branch
    - cron: '0 9 * * 1-5'
    # 10:00 AM IST => 4:30 AM UTC for staging branch
    - cron: '0 11 * * 1-5'
    # 12:00 PM IST => 6:30 AM UTC for dev branch
    - cron: '0 15 * * 1-5'
  workflow_dispatch:

jobs:
  run-tests:
    name: Run tests
    runs-on: ubuntu-latest

    if: |
      (github.ref == 'refs/heads/main' && github.event.schedule == '0 9 * * 1-5') ||
      (github.ref == 'refs/heads/staging' && github.event.schedule == '0 11 * * 1-5') ||
      (github.ref == 'refs/heads/dev' && github.event.schedule == '0 15 * * 1-5') ||
      github.event_name == 'workflow_dispatch'

    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        shardTotal: [10]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache npm modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Run tests
        run: npm run test:chrome -- --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Upload blob report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: ./blob-report
          retention-days: 1

  merge-reports:
    name: Merge Reports
    needs: [run-tests]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache npm modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Download blob reports
        uses: actions/download-artifact@v4
        with:
          path: ./all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge HTML/JSON report  
        run: npx playwright merge-reports --config=playwright.config.js ./all-blob-reports

      - name: Upload combined report
        uses: actions/upload-artifact@v4
        with:
          name: Playwright Test Report
          path: ./playwright-report
          retention-days: 14

      - name: Send TestDino report
        env: 
          NODE_ENV: 'staging'
        run: |
          npx --yes tdpw ./playwright-report --token="trx_staging_8e8d07d94ddde82c43fac1c83401555efbdff83c0e290138a95905df2a8e739e" --upload-html --verbose  
